{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","refs","fieldDays","document","querySelector","fieldHours","fieldMins","fieldSecs","start","setInterval","currentDate","Date","now","time","getTimeComponents","getTime","days","hours","mins","secs","insertData","place","value","textContent","Math","floor","String","padStart","timer1"],"mappings":";;;AA2DE,aA3DF,QAAA,oBAEA,MAAMA,EACFC,aAAY,SAACC,EAAD,WAAWC,IACdD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,KAAO,CACRC,UAAYC,SAASC,iBAAiB,KAAKL,oCAC3CM,WAAaF,SAASC,iBAAiB,KAAKL,qCAC5CO,UAAYH,SAASC,iBAAiB,KAAKL,oCAC3CQ,UAAYJ,SAASC,iBAAiB,KAAKL,qCAInDS,QAEAC,YAAY,KACRC,IAAAA,EAAcC,KAAKC,MAGjBC,MAAAA,EAAOC,EAFG,KAAKd,WAAWe,UAAYL,IAGtC,KAACM,EAAD,MAAOC,EAAP,KAAcC,EAAd,KAAoBC,GAAQN,EAElCO,EAAW,KAAKnB,KAAKC,UAAWc,GAChCI,EAAW,KAAKnB,KAAKI,WAAYY,GACjCG,EAAW,KAAKnB,KAAKK,UAAWY,GAChCE,EAAW,KAAKnB,KAAKM,UAAWY,IAKjC,MAKH,SAASC,EAAWC,EAAOC,GACvBD,EAAME,YAAcD,EAGxB,SAASR,EAAkBD,GACnBG,IAAAA,EAAOQ,KAAKC,MAAMZ,EAAQ,OAC9BG,EAAOU,OAAOV,GAAMW,SAAS,EAAG,KAC5BV,IAAAA,EAAQO,KAAKC,MAAOZ,EAAQ,MAAyB,MACzDI,EAAQS,OAAOT,GAAOU,SAAS,EAAG,KAC9BT,IAAAA,EAAOM,KAAKC,MAAOZ,EAAQ,KAAoB,KACnDK,EAAOQ,OAAOR,GAAMS,SAAS,EAAG,KAC5BR,IAAAA,EAAOK,KAAKC,MAAOZ,EAAQ,IAAc,KAGtC,MAAA,CAACG,KAAAA,EAAMC,MAAAA,EAAOC,KAAAA,EAAMC,KAF3BA,EAAOO,OAAOP,GAAMQ,SAAS,EAAG,MAMpC,MAAMC,EAAS,IAAI/B,EAAe,CAC9BE,SAAU,WACVC,WAAY,IAAIW,KAAK,kBAGvBiB,EAAOpB","file":"src.08eafc91.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n    constructor({selector, targetDate}){\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.refs = {\n            fieldDays : document.querySelector(`${this.selector} span[data-value=\"days\"]`),\n            fieldHours : document.querySelector(`${this.selector} span[data-value=\"hours\"]`),\n            fieldMins : document.querySelector(`${this.selector} span[data-value=\"mins\"]`),\n            fieldSecs : document.querySelector(`${this.selector} span[data-value=\"secs\"]`),\n        }\n    }\n\n    start()  {\n\n    setInterval(() => {\n    let currentDate = Date.now()\n    let deltaTime = this.targetDate.getTime() - currentDate\n\n    const time = getTimeComponents(deltaTime)\n    const {days, hours, mins, secs} = time;\n  \n    insertData(this.refs.fieldDays, days);\n    insertData(this.refs.fieldHours, hours);\n    insertData(this.refs.fieldMins, mins);\n    insertData(this.refs.fieldSecs, secs)\n    //this.refs.fieldDays.textContent = days;\n    //this.refs.fieldHours.textContent = hours;\n    //this.refs.fieldMins.textContent = mins;\n    //this.refs.fieldSecs.textContent = secs;\n}, 1000)\n}\n\n}\n\nfunction insertData(place, value) {\n    place.textContent = value\n}\n\nfunction getTimeComponents(time) {\n    let days = Math.floor(time / (1000 * 60 * 60 * 24));\n    days = String(days).padStart(3, \"0\");\n    let hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    hours = String(hours).padStart(2, \"0\");\n    let mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n    mins = String(mins).padStart(2, \"0\");\n    let secs = Math.floor((time % (1000 * 60)) / 1000);\n    secs = String(secs).padStart(2, \"0\");\n\n    return {days, hours, mins, secs};\n};\n\n\nconst timer1 = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Dec 31, 2021'),\n  });\n\n  timer1.start();"]}