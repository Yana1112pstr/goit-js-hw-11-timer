{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","setInterval","currentDate","Date","now","time","getTimeComponents","getTime","days","hours","mins","secs","refs","fieldDays","textContent","fieldHours","fieldMins","fieldSecs","document","querySelector","Math","floor","String","padStart","timer1"],"mappings":";;;AAkDE,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAlDF,QAAA,oBAEA,MAAMA,EACHC,aAAa,SAACC,EAAD,WAAWC,IAWf,EAAA,KAAA,QAAA,KAERC,YAAY,KACFC,MAAAA,EAAcC,KAAKC,MAGnBC,EAAOC,EAFK,KAAKN,WAAWO,UAAYL,IAGxC,KAACM,EAAD,MAAOC,EAAP,KAAcC,EAAd,KAAoBC,GAAQN,EAE7BO,KAAAA,KAAKC,UAAUC,YAAcN,EAC7BI,KAAAA,KAAKG,WAAWD,YAAcL,EAC9BG,KAAAA,KAAKI,UAAUF,YAAcJ,EAC7BE,KAAAA,KAAKK,UAAUH,YAAcH,GACnC,OAvBEZ,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbY,KAAAA,KAAO,CACRC,UAAYK,SAASC,iBAAiB,KAAKpB,qCAC3CgB,WAAaG,SAASC,iBAAiB,KAAKpB,sCAC5CiB,UAAYE,SAASC,iBAAiB,KAAKpB,qCAC3CkB,UAAYC,SAASC,iBAAiB,KAAKpB,uCAsBnD,SAASO,EAAkBD,GACnBG,IAAAA,EAAOY,KAAKC,MAAMhB,EAAQ,OAC1BI,EAAQW,KAAKC,MAAOhB,EAAQ,MAAyB,MACzDI,EAAQa,OAAOb,GAAOc,SAAS,EAAG,KAC9Bb,IAAAA,EAAOU,KAAKC,MAAOhB,EAAQ,KAAoB,KACnDK,EAAOY,OAAOZ,GAAMa,SAAS,EAAG,KAC5BZ,IAAAA,EAAOS,KAAKC,MAAOhB,EAAQ,IAAc,KAGtC,MAAA,CAACG,KAAAA,EAAMC,MAAAA,EAAOC,KAAAA,EAAMC,KAF3BA,EAAOW,OAAOX,GAAMY,SAAS,EAAG,MAMpC,MAAMC,EAAS,IAAI3B,EAAe,CAC9BE,SAAU,WACVC,WAAY,IAAIG,KAAK","file":"src.eeee1173.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n   constructor ({selector, targetDate}) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.refs = {\n        fieldDays : document.querySelector(`${this.selector} span [data-value=\"days\"]`),\n        fieldHours : document.querySelector(`${this.selector} span [data-value=\"hours\"]`),\n        fieldMins : document.querySelector(`${this.selector} span [data-value=\"mins\"]`),\n        fieldSecs : document.querySelector(`${this.selector} span [data-value=\"secs\"]`)\n    };\n    }\n\n    start = () => {\n\n    setInterval(() => {\n        const currentDate = Date.now();\n        const deltaTime = this.targetDate.getTime() - currentDate;\n\n        const time = getTimeComponents(deltaTime);\n        const {days, hours, mins, secs} = time;\n\n        this.refs.fieldDays.textContent = days;\n        this.refs.fieldHours.textContent = hours;\n        this.refs.fieldMins.textContent = mins;\n        this.refs.fieldSecs.textContent = secs;\n    }, 1000)\n}\n\n}\n\nfunction getTimeComponents(time) {\n    let days = Math.floor(time / (1000 * 60 * 60 * 24));\n    let hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    hours = String(hours).padStart(2, \"0\")\n    let mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n    mins = String(mins).padStart(2, \"0\")\n    let secs = Math.floor((time % (1000 * 60)) / 1000);\n    secs = String(secs).padStart(2, \"0\")\n\n    return {days, hours, mins, secs};\n};\n\n\nconst timer1 = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Dec 31, 2021'),\n  });\n\n  //timer1.start();"]}